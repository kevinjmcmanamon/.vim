set -g default-terminal "screen-256color"
set-window-option -g xterm-keys on

# vim-like pane resizing
bind -r C-k resize-pane -U
bind -r C-j resize-pane -D
bind -r C-h resize-pane -L
bind -r C-l resize-pane -R

# vim-like pane switching
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R

# Set vi mode to give vi-like bindings for navigating a buffer in a window.
setw -g mode-keys vi

# vim copy selection
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection

# Set so that no time/date etc appears at the bottom right of the status bar
# (leaves more room for windows)
set -g status-right '#S'
set -g status-left ''

# this will renumber windows automatically when one gets deleted
set-option -g renumber-windows on

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# remap prefix to Control + a
unbind C-b
set -g prefix C-a
bind a send-prefix

# Set current path to appear at bottom of window
set-window-option -g window-status-current-format '#[fg=red,bold]#{window_index}#[fg=green]:#{pane_current_command}#[fg=black]:#(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev)'
set-window-option -g window-status-format '#[fg=white,bold]#{window_index}#[fg=green]:#{pane_current_command}#[fg=black]:#(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev)'

# Change appearance of window to indicate that a pane is zoomed
bind-key z resize-pane -Z \; if-shell "tmux list-panes -F '#F' | grep -q Z" "set -g status-bg red" "set -g status-bg green"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key h if-shell "$is_vim" "send-keys c-a h"  "select-pane -L"
bind-key j if-shell "$is_vim" "send-keys c-a j"  "select-pane -D"
bind-key k if-shell "$is_vim" "send-keys c-a k"  "select-pane -U"
bind-key l if-shell "$is_vim" "send-keys c-a l"  "select-pane -R"
bind-key \ if-shell "$is_vim" "send-keys c-a \\" "select-pane -l"

# open new split and windows with the current working directory:
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# If using tmux 2.3 or older and using vi keys then you'll have add the
# following configuration setting in order for tmux-yank plugin to work (This
# isn't needed with tmux 2.4 or newer):
set -g @shell_mode 'vi'

# Linux has several cut-and-paste clipboards: primary, secondary, and
# clipboard.  You can change this by setting @yank_selection (for tmux-yank
# plugin):
set -g @yank_selection 'clipboard' # 'primary' or 'secondary' or 'clipboard'

# List of plugins (https://github.com/tmux-plugins/tpm)
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# -----------------------------------------------------------------------------
# TMUX PLUGIN MANAGER
# -----------------------------------------------------------------------------
# ctrl-a + I :
#    Installs new plugins from GitHub or any other git repository
#    Refreshes TMUX environment
#
# ctrl-a + U:
#    updates plugin(s)
#
# ctrl-a + alt + u:
#    remove/uninstall plugins not on the plugin list

# -----------------------------------------------------------------------------
# TMUX-YANK
# -----------------------------------------------------------------------------
# Normal mode:
#     - ctrl-a + y : copies text from the command line to the clipboard.
#     - ctrl-a + Y : copy the current pane's current working directory to the clipboard.
#
# Copy mode (i.e. after ctrl-a + [):
#     - y : copy selection to system clipboard.
#     - Y : "put" selection. Equivalent to copying a selection, and pasting it to the command line.

# -----------------------------------------------------------------------------
# TMUX-RESURRECT
# -----------------------------------------------------------------------------
# ctrl-a + ctrl-s : save
# ctrl-a + ctrl-r : restore
#

